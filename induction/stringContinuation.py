# 字符串拓展

# 字符串的三种定义方式
text1 = "text1"
text2 = 'text2'
text3 = """text3"""
print(text1, text2, text3)
"""
    如果我想要定义的字符串本身，是包含：单引号、双引号自身
    单引号定义法，可以内含双引号
    双引号定义法，可以内含单引号
    可以使用转移字符（\）来将引号解除效用，变成普通字符串
"""
# contains " "
print("-------")
text = "我叫：\"John\""
text2 = "今年大丰收'呀'！"
print(text, text2)

# 字符串拼接 +
"""
    一般，字面量和变量或变量和变量之间会使用拼接
"""
print("-------")
name = "李华"
address = "上海市浦东新区"
phone = 12345678899
print("我是" + name + ",电话是" + str(phone) + ",住在" + address)

# 字符串格式化
"""
    掌握通过占位的形式拼接字符串（字符串格式化）
    变量过多，拼接起来实在是太麻烦了
    掌握通过占位的形式拼接字符串（字符串格式化）
    
    其中的，%s 
        %  表示：我要占位
        s   表示：将变量变成字符串放入占位的地方
    我先占个位置，等一会有个变量过来，我把它变成字符串放到占位的位置
    
    字符串%s 整数%d 浮点数%f
"""
print("-------")
name = "星期六"
today = 325
money = 12
print("今天%s" % name)
print("今天是%s，%d号，花费了%.2f元" % (name, today, money))

# 格式化的精度控制
"""
    掌握格式化字符串的过程中做数字的精度控制
    我们可以使用辅助符号"m.n"来控制数据的宽度和精度
        m，控制宽度，要求是数字（很少使用）,设置的宽度小于数字自身，不生效
        .n，控制小数点精度，要求是数字，会进行小数的四舍五入
    示例：
        %5d：表示将整数的宽度控制在5位，如数字11，被设置为5d，就会变成：[空格][空格][空格]11，用三个空格补足宽度。
        %5.2f：表示将宽度控制为5，将小数点精度设置为2 小数点和小数部分也算入宽度计算。
            如，对11.345设置了%7.2f 后，结果是：[空格][空格]11.35。2个空格补足宽度，小数部分限制2位精度后，四舍五入为 .35
        %.2f：表示不限制宽度，只设置小数点精度为2，如11.345设置%.2f后，结果是11.35
"""
print("-------")
number1 = 11
number2 = 11.345
print("数字11宽度限制5，结果为%5d" % number1)
print("数字11宽度限制1，结果为%1d" % number1)
print("数字11.345宽度限制7，小数精度为2，结果为%7.2f" % number2)
print("数字11.345小数精度为2，结果为%.2f" % number2)

# 字符串格式化方式2
"""
    语法：f"内容{变量}"的格式来快速格式化
    这种写法不做精度控制也不理会类型适用于快速格式化字符串
"""
print("-------")
print(f"我是{name},电话是{phone},住在{address}")

# 对表达式进行格式化
print("-------")
"""
    表达式：一条具有明确执行结果的代码语句
"""
print("1*1的结果是: %d" % (1 * 1))
print(f"1*1的结果是: {1 * 1}")
print("字符串在Python中的类型是%s" % (type("1")))

# exercise 股价计算小程序
print("-------")
"""
    name，公司名
    stock_price，当前股价
    stock_code，股票代码
    stock_price_daily_growth_factor，股票每日增长系数，浮点数类型，比如1.2
    growth_days，增长天数
    计算，经过growth_days天的增长后，股价达到了多少钱
    使用字符串格式化进行输出，如果是浮点数，要求小数点精度2位数
"""
name = "company"
stock_price = 12.23
stock_code = "012000"
stock_price_daily_growth_factor = 1.2
growth_days = 3
print(
    f"公司:{name},股票代码:{stock_code},当前股价:{stock_price},"
    f"股票每日增长系数:{stock_price_daily_growth_factor},"
    f"经过{growth_days}天整长后，股价达到了%.2f元" % (stock_price * stock_price_daily_growth_factor ** growth_days))
